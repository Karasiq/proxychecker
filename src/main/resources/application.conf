proxyChecker {
  // Proxy checker
  frequency = 200 // Proxies per sec
  connectTimeout = 15s
  readTimeout = 10s
  checkUrl = "http://www.ietf.org/rfc.html"
  checkSubString = "<title>Request for Comments (RFC) Pages</title>"
  httpsCheckUrl = "https://source.oscartools.org:8080/"
  httpsCheckSubString = "Gerrit requires a JavaScript enabled browser"
  temporaryRetention = 5m // Delete dead temporary proxies after this duration
  maxRetries = 3 // Scan retries
  retryDelay = 30s

  // Proxy list parser
  parser {
    class = com.karasiq.proxychecker.parser.ProxyListAutoParser

    // Regular expression for ProxyRegexParser
    regex = "(\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b)(?::|\\s+|(?:<[\\w\\s/]*>)+|&port=)([0-9]{1,5})"
  }

  // Proxy store
  store.class = com.karasiq.proxychecker.store.MapDbProxyStore
  mapDb.path = ${user.home}/.proxychecker/proxychecker.db

  // Update scheduler
  scheduler {
    encoding = "ISO-8859-1" // Sources encoding
    threads = 40 // Max parallelism
    interval = 15m // Refresh interval
    retention = 5m // Delete dead proxies after this duration
    refresh = true // Refresh existing proxies in list
  }

  // Web-server settings
  webService {
    host = "0.0.0.0"
    port = 36800
  }
  webService-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-factor = 8.0
      parallelism-max = 100
    }
  }
}

// GeoIP DB settings
geoip {
  type = auto // auto or city/country/isp
  path = "GeoLite2-City.mmdb"
}

// Akka settings
akka {
  log-dead-letters = 0
  actor.deployment {
    /webService {
      dispatcher = proxyChecker.webService-dispatcher
    }
  }
}

// Spray settings
spray.can.server.idle-timeout = 600s
spray.routing.file-chunking-threshold-size = 256k